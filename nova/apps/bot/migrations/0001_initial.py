# Generated by Django 5.2.3 on 2025-06-22 03:20

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FavouritePlaylists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('url', models.URLField(db_index=True)),
                ('count', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('uploader', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Favourite Playlist',
                'verbose_name_plural': 'Favourite Playlists',
            },
        ),
        migrations.CreateModel(
            name='FavouriteTracks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('url', models.URLField(db_index=True)),
                ('duration', models.CharField(blank=True, max_length=20, null=True)),
                ('uploader', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Favourite Track',
                'verbose_name_plural': 'Favourite Tracks',
            },
        ),
        migrations.CreateModel(
            name='GuildConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auto_role_active', models.IntegerField(choices=[(0, 'Disabled'), (1, 'Enabled')], default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('auto_role_id', models.BigIntegerField(blank=True, null=True)),
                ('auto_role_name', models.CharField(blank=True, max_length=255, null=True)),
                ('spam_filter_action', models.IntegerField(choices=[(0, 'Disabled'), (1, 'Delete'), (2, 'Warn')], default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2)])),
                ('spam_filter_message', models.TextField(blank=True, null=True)),
                ('spam_filter_original_state', models.IntegerField(choices=[(0, 'Disabled'), (1, 'Delete'), (2, 'Warn')], default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2)])),
                ('warn_limit', models.IntegerField(default=6, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('warn_action', models.IntegerField(choices=[(0, 'Disabled'), (1, 'Notify'), (2, 'Kick'), (3, 'Ban')], default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3)])),
                ('warn_action_original_state', models.IntegerField(choices=[(0, 'Disabled'), (1, 'Notify'), (2, 'Kick'), (3, 'Ban')], default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3)])),
                ('translate', models.IntegerField(choices=[(0, 'Disabled'), (1, 'Enabled')], default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('translate_lang', models.CharField(default='en')),
                ('welcome_active', models.IntegerField(choices=[(0, 'Disabled'), (1, 'Enabled')], default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('welcome_channel_id', models.BigIntegerField(blank=True, null=True)),
                ('welcome_channel_name', models.CharField(blank=True, max_length=100, null=True)),
                ('welcome_title', models.CharField(blank=True, max_length=200, null=True)),
                ('welcome_description', models.TextField(blank=True, null=True)),
                ('welcome_colour', models.CharField(default='#FFFFFF', max_length=7)),
                ('welcome_show_pfp', models.IntegerField(choices=[(0, 'No Picture'), (1, 'Small Picture'), (2, 'Large Picture')], default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2)])),
            ],
            options={
                'verbose_name': 'Guild configuration',
                'verbose_name_plural': 'Guild configurations',
            },
        ),
        migrations.CreateModel(
            name='Owners',
            fields=[
                ('user_id', models.BigIntegerField(db_index=True, primary_key=True, serialize=False)),
                ('user_name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Owner',
                'verbose_name_plural': 'Owners',
            },
        ),
        migrations.CreateModel(
            name='UserConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translate_private', models.BooleanField(default=False)),
                ('fact_check_private', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'User configuration',
                'verbose_name_plural': 'User configurations',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.BigIntegerField(db_index=True, primary_key=True, serialize=False)),
                ('user_name', models.CharField(db_index=True, max_length=255)),
                ('global_name', models.CharField(blank=True, max_length=255, null=True)),
                ('avatar_url', models.URLField(blank=True, null=True)),
                ('config', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user', to='bot.userconfig')),
                ('favourite_playlists', models.ManyToManyField(blank=True, related_name='users', to='bot.favouriteplaylists')),
                ('favourite_tracks', models.ManyToManyField(blank=True, related_name='users', to='bot.favouritetracks')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Warns',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('reason', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('is_active', models.BooleanField(default=True)),
                ('moderator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='warns_issued', to='bot.users')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warns', to='bot.users')),
            ],
            options={
                'verbose_name': 'Warn',
                'verbose_name_plural': 'Warns',
            },
        ),
        migrations.CreateModel(
            name='Guilds',
            fields=[
                ('guild_id', models.BigIntegerField(db_index=True, primary_key=True, serialize=False)),
                ('guild_name', models.CharField(db_index=True, max_length=255)),
                ('guild_icon_url', models.URLField(blank=True, null=True)),
                ('config', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='guild', to='bot.guildconfig')),
                ('admins', models.ManyToManyField(blank=True, related_name='guilds_admins', to='bot.users')),
                ('blacklist', models.ManyToManyField(blank=True, related_name='guilds_blacklist', to='bot.users')),
                ('users', models.ManyToManyField(blank=True, related_name='guilds', to='bot.users')),
                ('warns', models.ManyToManyField(blank=True, related_name='guilds', to='bot.warns')),
            ],
            options={
                'verbose_name': 'Guild',
                'verbose_name_plural': 'Guilds',
            },
        ),
        migrations.AddIndex(
            model_name='warns',
            index=models.Index(fields=['user', 'date'], name='bot_warns_user_id_3881b5_idx'),
        ),
    ]
